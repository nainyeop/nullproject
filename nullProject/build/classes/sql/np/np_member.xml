<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.member">

	<sql id="search">
		<choose>
			<when test="searchOption == 'all'">
				WHERE  MNAME LIKE '%'||#{keyword}||'%'
				OR     EMAIL LIKE '%'||#{keyword}||'%'
			</when>	
			<otherwise>
				WHERE  ${searchOption} LIKE '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	<resultMap type="memberDto" id="memberResultMap">
		<id column = "MEMBER_NO"                     property="no"/>
		<result column = "MEMBER_NAME"                     property="name"/>
		<result column = "MEMBER_EMAIL"                     property="email"/>
		<result column = "MEMBER_PASSWORD"                     property="password"/>
		<result column = "MEMBER_PHONE"                     property="phone"/>
		<result column = "MEMBER_ADDRESS"                     property="address"/>
		<result column = "MEMBER_CASH"                     property="cash"/>
		<result column = "MEMBER_ADMIN"                     property="admin"/>
		<result column = "MEMBER_CATEGORY"                     property="category"/>
		<result column = "MEMBER_STATE"                     property="stage"/>
		<result column = "MEMBER_CRE_DATE"                     property="cre_date"
												javaType="java.util.Date"/>
		
	</resultMap>

	<select id="memberSelectList" parameterType="map"    resultMap="memberResultMap">
<!-- 		SELECT MNO, MNAME, EMAIL, CRE_DATE -->
<!-- 		FROM MEMBERS -->
<!-- 		ORDER BY MNO DESC -->
		
		SELECT MEMBER_NO, MEMBER_NAME, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_CRE_DATE
		FROM(
			SELECT ROWNUM RNUM, M.MEMBER_NO, M.MEMBER_NAME, M.MEMBER_EMAIL, M.MEMBER_PASSWORD, M.MEMBER_CRE_DATE
			FROM (
        		SELECT  MEMBER_NO, MEMBER_NAME, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_CRE_DATE
        		FROM NULLPROJECT_MEMBER
        		<include refid="search"></include>
       			ORDER BY CRE_DATE DESC)M
   			)NULLPROJECT_MEMBER
   		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<select id="memberExist" parameterType="map" resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_NAME, MEMBER_EMAIL
		FROM NULLPROJECT_MEMBER
		WHERE EMAIL = #{email} AND PWD = #{pwd}

	</select>
	<insert id="memberInsertOne" parameterType="com.edu.member.model.MemberDto" useGeneratedKeys="true" keyProperty="no">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT NULLPROJECT_MEMBER_NO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO NULLPROJECT_MEMBER
		VALUE(MNO, EMAIL, PWD, MNAME, CRE_DATE, MOD_DATE)
		VALUES(#{no},#{email}, #{password},#{name}, SYSDATE,SYSDATE)
	</insert>
	<select id="memberSelectOne" parameterType="int" resultMap="memberResultMap">
		SELECT MNO, EMAIL, MNAME, CRE_DATE
		FROM NULLPROJECT_MEMBER
		WHERE MNO = #{no}
	</select>
<!-- 	회원정보 수정 -->
	<update id="memberUpdateOne" parameterType="int">
		UPDATE NULLPROJECT_MEMBER
		<set>
			<if test="email !=''">EMAIL=#{email}, </if>
			<if test="name !=''">MNAME=#{name}, </if>
			MOD_DATE=SYSDATE
		</set>
			WHERE MNO =#{no}
	</update>
<!-- 	회원삭제 -->
	<delete id="memberDeleteOne" parameterType="int">
		DELETE FROM NULLPROJECT_MEMBER
		WHERE MNO = #{value}
	</delete>
<!-- 	전체 갯수 조회 -->
	<select id="memberSelectTotalCount" parameterType="map" resultType="java.lang.Integer">
		SELECT  COUNT(*)
		FROM NULLPROJECT_MEMBER
		<include refid="search"></include>
	</select>
	
<!-- 	file추가 -->
	<insert id="insertFile" parameterType="map">
		INSERT INTO TB_FILE
		VALUE	(IDX, PARENT_SEQ, ORIGINAL_FILE_NAME,
        		STORED_FILE_NAME, FILE_SIZE, CRE_DATE)
		VALUES	(TB_FILE_IDX_SEQ.NEXTVAL, #{parentSeq}, #{original_file_name}, #{stored_file_name}, #{file_size}, SYSDATE)
	</insert>
	
	<select id="fileSelectList" parameterType="int"
			resultType="map">
		SELECT IDX, ORIGINAL_FILE_NAME, STORED_FILE_NAME
				,ROUND(FILE_SIZE / 1024, 1) AS FILE_SIZE
		FROM TB_FILE
		WHERE PARENT_SEQ = #{no}
	</select>
	
	<delete id="fileDelete" parameterType="int">
		DELETE FROM TB_FILE
		WHERE PARENT_SEQ = #{no}
	</delete>
	
	<select id="fileSelectStoredFileName" parameterType="int" resultType="map">
		SELECT  IDX, STORED_FILE_NAME
		FROM TB_FILE
		WHERE PARENT_SEQ = #{no}
	</select>
</mapper>
	